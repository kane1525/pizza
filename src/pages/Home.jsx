import React from 'react';
import qs from 'qs';
import { useEffect, useState } from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { useNavigate } from 'react-router-dom';
import Categories from '../components/Categories';
import Sort, { list } from '../components/Sort';
import PizzaBlock from '../components/PizzaBlock';
import Skeleton from '../components/PizzaBlock/Skeleton';
import Pagination from '../components/Pagination';
import { SearchContext } from '../App';
import {
  setcategotyId,
  setCurrentPage,
  setFilters,
} from '../redux/slices/filterSlice';
import { fetchPizzas } from '../redux/slices/pizzaSlice';

const Home = () => {
  const navigate = useNavigate();
  const isMounted = React.useRef(false);
  const { categoryId, sort, currentPage } = useSelector(
    (state) => state.filter
  );
  const { items, status } = useSelector((state) => state.pizzas);
  // console.log(items);
  const sortType = sort.sortProperty;

  const { searchValue } = React.useContext(SearchContext);

  const dispatch = useDispatch();

  const onChangeCategory = (id) => {
    dispatch(setcategotyId(id));
  };

  const onChangePage = (number) => {
    dispatch(setCurrentPage(number));
  };

  React.useEffect(() => {
    if (window.location.search) {
      const params = qs.parse(window.location.search.substring(1));

      const sort = list.find((obj) => obj.sortProperty === params.sortProperty);

      dispatch(
        setFilters({
          ...params,
          sort,
        })
      );
      // getPizzas();
    }
    // isMounted.current = true;
  }, []);

  const getPizzas = async () => {
    const order = sortType.includes('-') ? 'asc' : 'desc';
    const sortBy = sortType.replace('-', '');
    const category = categoryId > 0 ? `category=${categoryId}` : '';
    const search = searchValue ? `&title=${searchValue}` : '';
    console.log('getPizzas –æ—Ç—Ä–∞–±–æ—Ç–∞–ª');

    dispatch(
      fetchPizzas({
        order,
        sortBy,
        category,
        search,
        currentPage,
      })
    );

    window.scrollTo(0, 0);
  };

  // React.useEffect(() => {
  //   if (window.location.search) {
  //     const params = qs.parse(window.location.search.substring(1));

  //     const sort = list.find((obj) => obj.sortProperty === params.sortProperty);

  //     dispatch(
  //       setFilters({
  //         ...params,
  //         sort,
  //       })
  //     );
  //     // getPizzas();
  //   }
  //   // isMounted.current = true;
  // }, []);

  React.useEffect(() => {
    if (isMounted.current) {
      const queryString = qs.stringify({
        sortProperty: sortType,
        categoryId,
        currentPage,
      });
      navigate(`?${queryString}`);
    }

    // if (!window.location.search) {
    //   console.log(111);
    //   fetchPizzas(); // –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ –∑–∞—á–µ–º —Ç—É—Ç —ç—Ç–æ –Ω–∞–ø–∏—Å–∞–Ω–æ, –∏ –±–µ–∑ —ç—Ç–æ–≥–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–∫ –∂–µ, –¢–ê–ö –ö–ê–ö –ü–ò–¶–¶–´ –ü–û–õ–£–ß–ê–Æ–¢–°–Ø –° –ü–û–ú–û–©–¨–Æ getPizzas —Å–æ —Å–ª–µ–¥ useEffect –¥–∞–∂–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
    //   // —á—Ç–æ –¥–µ–ª–∞–µ—Ç fetchPizzas?
    // }
  }, [categoryId, sortType, searchValue, currentPage]);

  useEffect(() => {
    getPizzas();
    // if (!isMounted.current) {
    //   isMounted.current = true;
    // }
    // —á—Ç–æ –¥–µ–ª–∞–µ—Ç getPizzas? –±–µ—Ä–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Å—Ç–µ–π—Ç–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ –∏—Å–ø–æ–ª—å–∑—É—è –∏—Ö –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ —Å–≤–æ–µ–º—É —à–∞–±–ª–æ–Ω—É (—É–∫–∞–∑–∞–Ω–Ω–æ–º—É –≤ –ø–∏—Ü—Ü–∞—Å–ª–∞–π—Å–µ), –ø–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω–∫–µ—Ä—Ç–Ω—ã–µ –ø–∏—Ü—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω—ã –∏ –º–µ–Ω—è–µ—Ç —Å—Ç–µ–π—Ç, —á—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Ä–µ—Ä–µ–Ω–¥–µ—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –Ω—É–∂–Ω—ã–º–∏ –ø–∏—Ü—Ü–∞–º–∏
  }, []);

  // ======= –í–æ–æ–±—â–µ –Ω–∏—á–µ –Ω–µ —Å–¥–µ–ª–∞–ª–∏, —Ç.–∫ —Å—Ç—Ä–æ–∫–∏ –Ω–µ –±—ã–ª–æ –≤ –£–†–õ–ï

  const pizzas = items.map((obj) => <PizzaBlock key={obj.id} {...obj} />);
  // items - —ç—Ç–æ –º–∞—Å—Å–∏–≤ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏
  // –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç –≤ –Ω–µ–º - —ç—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ –ø–∏—Ü—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –ø–æ–ª—É—á–∏–ª–∏ —Å –±–µ–∫–µ–Ω–¥–∞ –ø–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞ createAsyncThunk
  // —Ç–∞–º –±—É–¥—É—Ç –ª–µ–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ –ø–∏—Ü—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å
  // –º—ã –∏—Ö –ø–æ–ª—É—á–∏–ª–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∞ –±–µ–∫–µ–Ω–¥
  // –∏ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ —Ç–µ–ø–µ—Ä—å –º—ã –¥–µ–ª–∞–µ–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∞–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫—É –Ω–∞ —Å–∞–π—Ç–µ –∏ –ø–æ—Ç–æ–º –∫–æ–≥–¥–∞ –Ω–∞–º –±—É–¥–µ—Ç –Ω—É–∂–Ω–æ, –º—ã –≤—Å—Ç–∞–≤–∏–º —ç—Ç–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç
  // –º—ã –ø–æ–ª—É—á–∏–ª–∏ –º–∞—Å—Å–∏ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ —Ç–µ—Ö –ø–∏—Ü—Ü, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å, —Ç–µ–ø–µ—Ä—å –º—ã –≤ —ç—Ç–æ–º –º–∞—Å—Å–∏–≤–µ –∫–∞–∂–¥—ã–π –æ—Ç–¥–µ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–µ—Ä–µ–¥–∞–µ–º –≤ –Ω–∞—à —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º pizzablock indes.jsx. –ü–µ—Ä–µ–¥–∞–µ–º –ø–æ —Ü–µ–ø–æ—á–∫–µ, –∏ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ —Ç–∞–º —ç—Ç–æ—Ç —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π —à–∞–±–ª–æ–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–æ –æ–¥–Ω–æ–º—É –æ–±—ä–µ–∫—Ç—É –∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞—à–µ–≥–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –æ–Ω —Å–¥–µ–ª–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É –≤–∏–¥–∏–º—É—é, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞ —Å–∞–π—Ç–µ –∏ –æ–Ω —Å–¥–µ–ª–∞–µ—Ç —Å—Ç–æ–ª—å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫, —Å–∫–æ–ª—å–∫–æ —Ç–∞–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –±—É–¥–µ—Ç –≤ –º–∞—Å—Å–∏–∏–≤–µ, –∫–æ—Ç–æ—Ä—ã–π –º—ã –º–∞–ø–∏–º, –∏ –≤—Å–µ —ç—Ç–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–º–µ—Å—Ç—è—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é pizzas
  const skeletons = [...new Array(6)].map((_, i) => <Skeleton key={i} />);

  return (
    <div className="container">
      <div className="content__top">
        <Categories value={categoryId} onClickCategory={onChangeCategory} />
        <Sort />
      </div>
      <h2 className="content__title">–í—Å–µ –ø–∏—Ü—Ü—ã</h2>
      {status === 'rejected' ? (
        <div className="content__error-info">
          {' '}
          <h2>
            Error ocured <span>üòï</span>
          </h2>
          <p>
            Unfortunately we can not fetch pizzas
            <br />
            –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å –ø–∏—Ü—Ü—É, –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.
          </p>
        </div>
      ) : (
        <div className="content__items">
          {status === 'pending' ? skeletons : pizzas}
        </div>
      )}

      <Pagination currentPage={currentPage} onChangePage={onChangePage} />
    </div>
  );
};

export default Home;
