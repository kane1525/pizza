import React from 'react';
import qs from 'qs';
import { useEffect } from 'react';
import { useSelector } from 'react-redux';
import { useNavigate } from 'react-router-dom';
import Categories from '../components/Categories';
import Sort, { list } from '../components/Sort';
import PizzaBlock from '../components/PizzaBlock';
import Skeleton from '../components/PizzaBlock/Skeleton';
import Pagination from '../components/Pagination';
import {
  filterStateSelector,
  setcategotyId,
  setCurrentPage,
  setFilters,
} from '../redux/slices/filterSlice';
import {
  fetchPizzas,
  pizzasStateSelector,
  SearchPizzaParams,
} from '../redux/slices/pizzaSlice';
import { useAppDispatch } from '../redux/store';
import { FilterSliceState } from '../redux/slices/filterSlice';
import { nanoid } from '@reduxjs/toolkit';

const Home: React.FC = () => {
  const navigate = useNavigate();
  const isMounted = React.useRef(false);
  const isSearch = React.useRef(false);
  const { categoryId, sort, currentPage, searchValue } =
    useSelector(filterStateSelector);
  const { items, status } = useSelector(pizzasStateSelector);
  const sortType = sort.sortProperty;

  const dispatch = useAppDispatch();

  const onChangeCategory = (idx: number) => {
    dispatch(setcategotyId(idx));
  };

  const onChangePage = (page: number) => {
    dispatch({
      type: 123,
      entyties: [1, 2, 3, 4],
    });
  };

  const getPizzas = async () => {
    const order = sortType.includes('-') ? 'asc' : 'desc';
    const sortBy = sortType.replace('-', '');
    const category = categoryId > 0 ? `category=${categoryId}` : '';
    const search = searchValue ? `&title=${searchValue}` : '';

    dispatch(
      fetchPizzas({
        order,
        sortBy,
        category,
        search,
        currentPage: String(currentPage),
      })
      //2 –°–≤—è–∑—å —Ç–∏–ø–æ–≤
      // 2 –≤ —ç—Ç–æ–º –º–µ—Å—Ç–µ –º—ã –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–µ–º—Å—è –ø–æ–¥ —à–∞–±–ª–æ–Ω type SearchPizzaParams –ü–æ—á–µ–º—É?
      // –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç–∞–º –≥–¥–µ –º—ã —Å–æ–∑–¥–∞–≤–∞–ª–∏ —ç—Ç—É —Ñ-—Ü–∏—é, –º—ã –Ω–∞–ø–∏—Å–∞–ª–∏ —É –Ω–µ–µ –≤ –ø—Ä–æ–ø—Å–∞—Ö, —á—Ç–æ —ç—Ç–∏ –ø—Ä–æ–ø—Å—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥—Ö–æ–¥–∏—Ç—å –ø–æ–¥ —à–∞–±–ª–æ–Ω SearchPizzaParams
      // –∏ —Ç–µ–ø–µ—Ä—å –≤–µ–∑–¥–µ, –≥–¥–µ –º—ã —Ö–æ—Ç–∏–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É —Ñ-—Ü–∏—é, –º—ã –¥–æ–ª–∂–Ω—ã –ø–µ—Ä–µ–¥–∞—Ç—å –µ–π –ø—Ä–æ–ø—Å—ã —á—Ç–æ –± –æ–Ω–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏–ª–∏ –ø–æ–¥ —Ç–∞–∫–æ–π —à–∞–±–ª–æ–Ω
    );

    window.scrollTo(0, 0);
  };

  React.useEffect(() => {
    if (window.location.search) {
      const params = qs.parse(window.location.search.substring(1)); // —Ç—É—Ç –±—ã–ª–æ –¥–¥–æ–ø–∏—Å–∞–Ω–æ —Ç–µ–∫—Å—Ç as unknown as SearchPizzaParams
      // –Ω–∞—à–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ params  –µ—Å–ª–∏ –ø–æ —á–µ—Å—Ç–Ω–æ–º—É –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ —à–∞–±–ª–æ–Ω SearchPizzaParams, –Ω–æ –ø—É—Å—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä –¥—É–º–∞–µ—Ç, —á—Ç–æ –ø–æ–¥—Ö–æ–¥–∏—Ç

      const sort = list.find((obj) => obj.sortProperty === params.sortProperty);

      // if (typeof params.search === 'string') {
      // –±—ã–ª–æ –±–µ–∑ —ç—Ç–æ–≥–æ –∏—Ñ!!!
      dispatch(
        setFilters({
          // 5 —Å–≤—è–∑—å —Ç–∏–ø–æ–≤
          // ...params,
          searchValue: '', //params.search,
          categoryId: Number(params.categoryId),
          currentPage: Number(params.currentPage),
          sort: sort || list[0],
        })
        // –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –º—ã –ø–µ—Ä–µ–¥–∞–µ–º –≤ setFilters –æ–±—è—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω —Å–æ–æ—Ç–≤–µ—Å—Ç–≤–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω—É FilterSliceState –ü–æ—á–µ–º—É?
        // –ü–æ—Ç–æ–º—É —á—Ç–æ –≤ —Ñ–∏–ª—å—Ç–µ—Ä—Å–ª–∞–π—Å–µ —Ç–∞–º –≥–¥–µ –º—ã —Å–æ–∑–¥–∞–≤–∞–ª–∏ –µ–∫—à–Ω setFilters –º—ã —É–∫–∞–∑–∞–ª–∏, —á—Ç–æ –µ–≥–æ –ø–µ–π–ª–æ–∞–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å FilterSliceState
        // —Å–æ–æ—Ç–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ –≤–µ–∑–¥–µ, –≥–¥–µ –º—ã –±—É–¥–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–∞—à –µ–∫—à–Ω setFilters –º—ã –¥–æ–ª–∂–Ω—ã –ø–æ–∑–∞–±–æ—Ç–∏—Ç—å—Å—è —á—Ç–æ –± –ø–µ–π–ª–æ–∞–¥ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤–æ–≤–∞–ª FilterSliceState
      );
      isSearch.current = true;
    }
    // }
  }, []);

  React.useEffect(() => {
    if (isMounted.current) {
      const queryString = qs.stringify({
        sortProperty: sortType,
        categoryId,
        currentPage,
      });
      navigate(`?${queryString}`);
    }
  }, [categoryId, sortType, searchValue, currentPage]);

  useEffect(() => {
    if (!isSearch.current) {
      // –ø–∏—à–µ–º —Ç–∞–∫ –ø–æ—Ç–æ–º—É —á—Ç–æ isSearch —Å–æ–∑–¥–∞–Ω —Å –ø–æ–º–æ—â—å—é useRef –∏ —á—Ç–æ –± –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∑–Ω–∞—á–µ–Ω–∏—é, –∫–æ—Ç–æ—Ä–æ–µ –º—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏, –Ω–µ—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å –Ω–µ –ø—Ä–æ—Å—Ç–æ isSearch, –∞ isSearch.current
      getPizzas();
    }
    isSearch.current = false;
    isMounted.current = true;
  }, [categoryId, sortType, searchValue, currentPage]);

  const pizzas = items.map((obj: any) => <PizzaBlock {...obj} />);
  const skeletons = [...new Array(6)].map((_, i) => <Skeleton key={i} />);

  return (
    <div className="container">
      <div className="content__top">
        <Categories value={categoryId} onClickCategory={onChangeCategory} />
        <Sort />
      </div>
      <h2 className="content__title">–í—Å–µ –ø–∏—Ü—Ü—ã</h2>
      {status === 'rejected' ? (
        <div className="content__error-info">
          {' '}
          <h2>
            Error ocured <span>üòï</span>
          </h2>
          <p>
            Unfortunately we can not fetch pizzas
            <br />
            –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å –ø–∏—Ü—Ü—É, –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.
          </p>
        </div>
      ) : (
        <div className="content__items">
          {status === 'pending' ? skeletons : pizzas}
        </div>
      )}

      <Pagination currentPage={currentPage} onChangePage={onChangePage} />
    </div>
  );
};

export default Home;

// –µ—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ —á—Ç–æ —É –Ω–∞—Å –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ—á–∫–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å —á—Ç–æ —Ç–æ, –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º useLocation
// —Ö—É–∫ useLocation –¥–∞–µ—Ç –Ω–∞–º –ø–æ–Ω—è—Ç—å —á—Ç–æ –∞–¥—Ä–µ—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∞–ª–∞—Å—å, –∏ –Ω–∞ —Ç–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫—É

// —Ö—É–∫ —é–∑–ø–∞—Ä–∞–º—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∑—è—Ç—å –∫–∞–∫–∏–µ —Ç–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —Å —É—Ä–ª —Å—Ç—Ä–æ–∫–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä –≤ –∑–∞–ø—Ä–æ—Å–µ

// —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, —Ç–µ –∫–æ—Ç–æ—Ä—ã–µ –±–µ–∑ : —É–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤ —Ä–æ—É—Ç–∞—Ö, –º–æ–∂–Ω–æ –≤—ã—Ç–∞—â–∏—Ç—å —Å –ø–æ–º–æ—â—å—é window.location.search –∏–ª–∏ –∂–µ —Å –ø–æ–º–æ—â—å—é —Ä–æ—É—Ç–µ—Ä –¥–æ–º —Ö—É–∫–∞ useSearchParams
// –∏–ª–∏ –∂–µ –≤ —Å –ø–æ–º–æ—â—å—é —Ö—É–∫–∞ useLocation, –≤–Ω—É—Ç—Ä–∏ —Ç–æ–≥–æ —á—Ç–æ –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±—É–¥–µ—Ç —Å–≤–æ–π—Å—Ç–≤–æ search

// –ï—Å–ª–∏ —É –Ω–∞—Å –µ—Å—Ç—å –∑–∞–¥–∞—á–∞ —á—Ç–æ –± –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —á–∞—Å—Ç–∏ —Å–∞–π—Ç–∞ –æ—Å—Ç–∞–≤–∞–ª–∏—Å—å —Å—Ç–∞—Ç–∏—á–Ω—ã–º–∏, –∞ –¥—Ä—É–≥–∏–µ –º–µ–Ω—è–ª–∏—Å—å, –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å outlet
